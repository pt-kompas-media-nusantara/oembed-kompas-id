{
  /* Dokumentasi lengkap di https://aka.ms/tsconfig.json */
  "compilerOptions": {
    /* Emit */
    "allowSyntheticDefaultImports": true, /* Allow 'import x from y' when a module doesn't have a default export. */
    "outDir": "dist",                     /* Specify an output folder for all emitted files. */
    "sourceMap": true,                    /* Create source map files for emitted JavaScript files. */

    /* Language and Environment */
    "experimentalDecorators": true,                          /* Enable experimental support for TC39 stage 2 draft decorators. */
    "lib": ["es6", "dom", "es2017", "esnext.asynciterable"], /* Specify a set of bundled library declaration files that describe the target runtime environment. */
    "target": "es2016",                                      /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */

    /* Modules */
    "baseUrl": "./",                          /* Specify the base directory to resolve non-relative module names. */
    "emitDecoratorMetadata": true,            /* Emit design-type metadata for decorated declarations in source files. */
    "esModuleInterop": true,                  /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables `allowSyntheticDefaultImports` for type compatibility. */
    "forceConsistentCasingInFileNames": true, /* Ensure that casing is correct in imports. */
    "module": "commonjs",                     /* Specify what module code is generated. */
    "moduleResolution": "node",               /* Specify how TypeScript looks up a file from a given module specifier. */
    "resolveJsonModule": true,                /* Enable importing .json files */
    "rootDir": "./",                          /* Specify the root folder within your source files. */

    /* Type Checking */
    "strict": true, /* Enable all strict type-checking options. */

    /* JavaScript Support */
    "allowJs": true, /* Allow JavaScript files to be a part of your program. Use the `checkJS` option to get errors from these files. */
  }
}
